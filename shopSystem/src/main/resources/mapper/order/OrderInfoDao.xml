<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shop.module.order.dao.OrderInfoDao">
    <resultMap id="BaseResultMap" type="com.shop.module.order.entity.OrderInfo">
        <id column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="revision" jdbcType="INTEGER" property="revision"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="order_no" jdbcType="VARCHAR" property="orderNo"/>
        <result column="consignee" jdbcType="VARCHAR" property="consignee"/>
        <result column="consignee_mobile" jdbcType="VARCHAR" property="consigneeMobile"/>
        <result column="consignee_address" jdbcType="VARCHAR" property="consigneeAddress"/>
        <result column="pay_time" jdbcType="TIMESTAMP" property="payTime"/>
        <result column="order_status" jdbcType="CHAR" property="orderStatus"/>
        <result column="pay_status" jdbcType="CHAR" property="payStatus"/>
        <result column="receipt_status" jdbcType="CHAR" property="receiptStatus"/>
        <result column="c_id" jdbcType="VARCHAR" property="cId"/>
        <result column="total_amount" jdbcType="DECIMAL" property="totalAmount"/>
        <result column="pay_amount" jdbcType="DECIMAL" property="payAmount"/>
        <result column="coupon_amount" jdbcType="DECIMAL" property="couponAmount"/>
        <result column="num_total" jdbcType="INTEGER" property="numTotal"/>
        <result column="c_login_name" jdbcType="VARCHAR" property="cLoginName"/>
    </resultMap>

    <resultMap id="BaseDetailMap" type="com.shop.module.order.entity.OrderInfo" extends="BaseResultMap">
        <collection property="orderDetailInfos" ofType="com.shop.module.order.entity.OrderDetailInfo">
            <id column="order_detail_id" property="orderDetailId"/>
            <result column="revision" property="revision"/>
            <result column="created_by" property="createdBy"/>
            <result column="created_time" property="createdTime"/>
            <result column="updated_by" property="updatedBy"/>
            <result column="updated_time" property="updatedTime"/>
            <result column="order_id" property="orderId"/>
            <result column="order_no" property="orderNo"/>
            <result column="item_id" property="itemId"/>
            <result column="item_name" property="itemName"/>
            <result column="item_img" property="itemImg"/>
            <result column="num" property="itemNum"/>
            <result column="price" property="itemPrice"/>
            <result column="price_total" property="priceTotal"/>
            <result column="c_id" property="cId"/>
            <result column="c_login_name" property="cLoginName"/>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        oi.order_id, oi.revision, oi.create_by, oi.create_time, oi.update_by, oi.update_time, oi.order_no,
    oi.consignee, oi.consignee_mobile, oi.consignee_address, oi.pay_time, oi.order_status, oi.pay_status, oi.receipt_status,
    oi.c_id, oi.total_amount, oi.pay_amount, oi.coupon_amount, oi.num_total, oi.c_login_name
    </sql>

    <sql id="Detail_Base_Column_List">
        <include refid="com.shop.module.order.dao.OrderDetailInfoDao.Base_Column_List"/>
    </sql>

    <!--  根据订单ID查询订单及详情-->
    <select id="queryOrderDetailTitle" resultMap="BaseDetailMap">
        select distinct
        <include refid="Base_Column_List"/>,
        <include refid="Detail_Base_Column_List"/>
        FROM order_info oi
        left JOIN order_detail_info odi
        ON oi.order_id = odi.order_id
        AND oi.order_no = odi.order_no
        WHERE oi.order_id = #{orderId,jdbcType=VARCHAR}
    </select>
    <!--根据客户Id查询订单-->
    <select id="queryOrderBycId" resultMap="BaseDetailMap">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Detail_Base_Column_List"/>
        FROM order_info oi
        left JOIN order_detail_info odi
        ON oi.order_id = odi.order_id
        AND oi.order_no = odi.order_no
        where oi.c_id = #{cId,jdbcType=VARCHAR}
        ORDER BY FIELD(oi.order_status,"0","2","3","1"), oi.create_time DESC
    </select>

    <!--  分页查询所有订单-->
    <select id="queryOrderAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM order_info oi
        ORDER BY create_time DESC
    </select>

    <!--条件查询订单-->
    <select id="queryOrder" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        FROM order_info oi
        <where>
            <if test="orderNo!=null and orderNo!=''">
                AND order_no = #{orderNo,jdbcType=VARCHAR}
            </if>
            <if test="startTime!=null and startTime!=''">
                AND create_time >= #{startTime}
            </if>
            <if test="endTime!=null and endTime!=''">
                AND create_time &lt;= #{endTime}
            </if>
            <if test="payStatus!=null and payStatus!=''">
                AND pay_status = #{payStatus,jdbcType=CHAR}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <!--查询未支付超时订单-->
    <select id="queryOverTimeOrder" resultType="com.shop.module.order.entity.OrderInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM order_info oi
        WHERE oi.order_status = 0
        AND oi.pay_status = 0
        AND oi.create_time &lt; date_add(NOW(), INTERVAL -#{minute} MINUTE)
        ORDER BY create_time DESC
    </select>

    <!--查询已支付未确认订单-->
    <select id="queryUnconfirmed" resultType="com.shop.module.order.entity.OrderInfo">
        SELECT
        <include refid="Base_Column_List"/>
        FROM order_info oi
        WHERE oi.order_status = 0
        AND oi.receipt_status = 0
        AND oi.pay_status = 1
        AND oi.pay_time &lt; date_add(NOW(), INTERVAL -#{day} day)
        ORDER BY create_time DESC
    </select>

    <!--查询所有订单-->
    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_info oi
        ORDER BY create_time DESC
    </select>

    <!--根据订单状态和支付状态查询订单-->
    <select id="queryByState" resultMap="BaseDetailMap">
        select
        <include refid="Base_Column_List"/>,
        <include refid="Detail_Base_Column_List"/>
        FROM order_info oi
        left JOIN order_detail_info odi
        ON oi.order_id = odi.order_id
        AND oi.order_no = odi.order_no
        <where>
            <if test="orderStatus!=null and orderStatus!=''">
                AND order_status = #{orderStatus,jdbcType=CHAR}
            </if>
            <if test="payStatus!=null and payStatus!=''">
                AND pay_status = #{payStatus,jdbcType=CHAR}
            </if>
            <if test="receiptStatus!=null and receiptStatus!=''">
                AND receipt_status = #{receiptStatus,jdbcType=CHAR}
            </if>
        </where>
        AND oi.c_id = #{cId,jdbcType=VARCHAR}
    </select>
<!--订单分析数据-->
    <select id="queryOrderData" resultType="com.alibaba.fastjson.JSONObject">
        SELECT
        t1.day,
        IFNULL(t2.count,0) AS num
        FROM
        (SELECT
        @cdate := DATE_ADD(@cdate, INTERVAL - 1 DAY) day
        FROM
        (SELECT
        @cdate := DATE_ADD(#{beginTime}, INTERVAL + 1 DAY)
        FROM
        order_info) oi
        LIMIT 7) t1
        LEFT JOIN
        ( SELECT DATE(oi.create_time) day, COUNT(*) AS count FROM order_info oi WHERE DATE_SUB(#{beginTime}, INTERVAL 7
        DAY) &lt;= DATE(oi.create_time)
        <if test="orderStatus != null">
            and order_status = #{orderStatus}
        </if>
        GROUP BY day) t2
        ON t2.day = t1.day
        GROUP BY t1.day
    </select>
    
    <!--根据商品ID查询该商品进行中的订单数量-->
    <select id="selectByItemId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM order_detail_info odi
                 JOIN order_info oi ON oi.order_id = odi.order_id
        WHERE odi.item_id = #{itemId}
          AND oi.order_status = 0
    </select>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from order_info oi
        where order_id = #{orderId,jdbcType=VARCHAR}
    </select>

    <!--批量删除订单-->
    <delete id="deleteByPrimaryKeys">
        delete oi,odi
        from order_info as oi
        left join order_detail_info as odi
        on oi.order_id=odi.order_id
        where oi.order_status IN ('1', '2', '3') and oi.order_id in
        <foreach item="orderId" collection="list" index="index" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </delete>

    <!--删除订单-->
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete oi,odi
        from order_info as oi
                 left join order_detail_info as odi
                           on oi.order_id = odi.order_id
        where oi.order_id = #{orderId,jdbcType=VARCHAR}
          AND oi.order_status IN ('1', '2', '3')
    </delete>

    <!--修改订单和收货状态-->
    <update id="updateOrderStatus">
        update order_info
        <set>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=CHAR},
            </if>
            <if test="receiptStatus != null">
                receipt_status = #{receiptStatus,jdbcType=CHAR},
            </if>
        </set>
        where order_id in
        <foreach item="orderId" collection="list" index="index" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </update>

    <insert id="insert" parameterType="com.shop.module.order.entity.OrderInfo">
        insert into order_info (order_id, revision, create_by,
                                create_time, update_by, update_time,
                                order_no, consignee,
                                consignee_mobile, consignee_address, pay_time,
                                order_status, pay_status, receipt_status, c_id,
                                total_amount, pay_amount, coupon_amount,
                                num_total,
                                c_login_name)
        values (#{orderId,jdbcType=VARCHAR}, #{revision,jdbcType=INTEGER}, #{createBy,jdbcType=VARCHAR},
                #{createTime,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP},
                #{orderNo,jdbcType=VARCHAR}, #{consignee,jdbcType=VARCHAR},
                #{consigneeMobile,jdbcType=VARCHAR}, #{consigneeAddress,jdbcType=VARCHAR},
                #{payTime,jdbcType=TIMESTAMP},
                #{orderStatus,jdbcType=CHAR}, #{payStatus,jdbcType=CHAR}, #{receiptStatus,jdbcType=CHAR},
                #{cId,jdbcType=VARCHAR},
                #{totalAmount,jdbcType=DECIMAL}, #{payAmount,jdbcType=DECIMAL}, #{couponAmount,jdbcType=DECIMAL},
                #{numTotal,jdbcType=INTEGER},
                #{cLoginName,jdbcType=VARCHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.shop.module.order.entity.OrderInfo">
        insert into order_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                order_id,
            </if>
            <if test="revision != null">
                revision,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="orderNo != null">
                order_no,
            </if>
            <if test="consignee != null">
                consignee,
            </if>
            <if test="consigneeMobile != null">
                consignee_mobile,
            </if>
            <if test="consigneeAddress != null">
                consignee_address,
            </if>
            <if test="payTime != null">
                pay_time,
            </if>
            <if test="orderStatus != null">
                order_status,
            </if>
            <if test="payStatus != null">
                pay_status,
            </if>
            <if test="receiptStatus != null">
                receipt_status,
            </if>
            <if test="cId != null">
                c_id,
            </if>
            <if test="totalAmount != null">
                total_amount,
            </if>
            <if test="payAmount != null">
                pay_amount,
            </if>
            <if test="couponAmount != null">
                coupon_amount,
            </if>
            <if test="numTotal != null">
                num_total,
            </if>
            <if test="cLoginName != null">
                c_login_name,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="revision != null">
                #{revision,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderNo != null">
                #{orderNo,jdbcType=VARCHAR},
            </if>

            <if test="consignee != null">
                #{consignee,jdbcType=VARCHAR},
            </if>
            <if test="consigneeMobile != null">
                #{consigneeMobile,jdbcType=VARCHAR},
            </if>
            <if test="consigneeAddress != null">
                #{consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderStatus != null">
                #{orderStatus,jdbcType=CHAR},
            </if>
            <if test="payStatus != null">
                #{payStatus,jdbcType=CHAR},
            </if>
            <if test="receiptStatus != null">
                #{receiptStatus,jdbcType=CHAR},
            </if>
            <if test="cId != null">
                #{cId,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="couponAmount != null">
                #{couponAmount,jdbcType=DECIMAL},
            </if>
            <if test="numTotal != null">
                #{numTotal,jdbcType=INTEGER},
            </if>
            <if test="cLoginName != null">
                #{cLoginName,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>


    <update id="updateStatusByOrderIds">
        update order_info
        <set>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=CHAR},
            </if>
            <if test="receiptStatus != null">
                receipt_status = #{receiptStatus,jdbcType=CHAR},
            </if>
        </set>
        where order_id in
        <foreach collection="list" item="orderIds" index="index" open="(" separator="," close=")">
            #{orderIds}
        </foreach>
    </update>


    <update id="updateByPrimaryKeySelective" parameterType="com.shop.module.order.entity.OrderInfo">
        update order_info
        <set>
            <if test="revision != null">
                revision = #{revision,jdbcType=INTEGER},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderNo != null">
                order_no = #{orderNo,jdbcType=VARCHAR},
            </if>

            <if test="consignee != null">
                consignee = #{consignee,jdbcType=VARCHAR},
            </if>
            <if test="consigneeMobile != null">
                consignee_mobile = #{consigneeMobile,jdbcType=VARCHAR},
            </if>
            <if test="consigneeAddress != null">
                consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
            </if>
            <if test="payTime != null">
                pay_time = #{payTime,jdbcType=TIMESTAMP},
            </if>
            <if test="orderStatus != null">
                order_status = #{orderStatus,jdbcType=CHAR},
            </if>
            <if test="payStatus != null">
                pay_status = #{payStatus,jdbcType=CHAR},
            </if>
            <if test="receiptStatus != null">
                receipt_status = #{receiptStatus,jdbcType=CHAR},
            </if>
            <if test="cId != null">
                c_id = #{cId,jdbcType=VARCHAR},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount,jdbcType=DECIMAL},
            </if>
            <if test="payAmount != null">
                pay_amount = #{payAmount,jdbcType=DECIMAL},
            </if>
            <if test="couponAmount != null">
                coupon_amount = #{couponAmount,jdbcType=DECIMAL},
            </if>
            <if test="numTotal != null">
                num_total = #{numTotal,jdbcType=INTEGER},
            </if>
            <if test="cLoginName != null">
                c_login_name = #{cLoginName,jdbcType=VARCHAR},
            </if>
        </set>
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.shop.module.order.entity.OrderInfo">
        update order_info
        set revision          = #{revision,jdbcType=INTEGER},
            create_by         = #{createBy,jdbcType=VARCHAR},
            create_time       = #{createTime,jdbcType=TIMESTAMP},
            update_by         = #{updateBy,jdbcType=VARCHAR},
            update_time       = #{updateTime,jdbcType=TIMESTAMP},
            order_no          = #{orderNo,jdbcType=VARCHAR},
            consignee         = #{consignee,jdbcType=VARCHAR},
            consignee_mobile  = #{consigneeMobile,jdbcType=VARCHAR},
            consignee_address = #{consigneeAddress,jdbcType=VARCHAR},
            pay_time          = #{payTime,jdbcType=TIMESTAMP},
            order_status      = #{orderStatus,jdbcType=CHAR},
            pay_status        = #{payStatus,jdbcType=CHAR},
            receipt_status    = #{receiptStatus,jdbcType=CHAR},
            c_id              = #{cId,jdbcType=VARCHAR},
            total_amount      = #{totalAmount,jdbcType=DECIMAL},
            pay_amount        = #{payAmount,jdbcType=DECIMAL},
            coupon_amount     = #{couponAmount,jdbcType=DECIMAL},
            num_total         = #{numTotal,jdbcType=INTEGER},
            c_login_name      = #{cLoginName,jdbcType=VARCHAR}
        where order_id = #{orderId,jdbcType=VARCHAR}
    </update>
</mapper>